import React from 'react'
import ShowFile from './ShowFile'

const DropZone = ({ data, dispatch }) => {

    //onDragEnter sets inDropZone to true
    const handleDragEnter = (e) => {
        e.preventDefault();
        e.stopPropagation();
        dispatch({ type: "setDropZone", inDropZone: true, })
    };

    // onDragLeave sets inDropZone to false

    const handleDragLeave = (e) => {
        e.preventDefault();
        e.stopPropagation();
        dispatch({ type: "setDropZone", inDropZone: false })
    }

    // onDragOver sets inDropZone to true

    const handleDragOver = (e) => {
        e.preventDefault();
        e.stopPropagation();

        //set dropEffect to copy i.e copy of the source item
        e.dataTransfer.dropEffect = "copy";
        dispatch({ type: "setDropZone", inDropZone: true })
    }

    // onDrop sets inDropZone to false and adds files to fileList
    const handleDrop = (e) => {
        e.preventDefault();
        e.stopPropagation();

        // get files from event on the dataTransfer object as an array 
        let files = [...e.dataTransfer.files];

        // ensure a file or files are dropped 

        if (files && files.length > 0) {
            //loop over existing files 
            const existingFiles = data.fileList.map((f) => f.name);
            // check if file already exists, if so, don't add to fileList
            // this is to prevent duplicates 
            files = files.filter((f) => !existingFiles.includes(f.name));

            //dispatch action to add droped file or files to fileList
            dispatch({ type: "addFileToList", files });
            //reset inDropZone to false
            dispatch({ type: "setDropZone", inDropZone: false });
        }
    };

    // handle file selection via input element 
    const handleFileSelect = (e) => {
        //get files form event on the input element as an array 
        let files = [...e.target.files];
        //ensure a file or files are selected 
        if (files && files.length > 0) {
            //loop over existing files
            const existingFiles = data.fileList.map((f) => f.name);
            // check if file already exists, if so, don't add to the fileList
            // this is to prevent duplicated 
            files = files.filter((f) => !existingFiles.includes(f.name));
            // dispatch action to add selected file or files to fileList
            dispatch({ type: "addFileToList", files })
        }
    }

    // ___________ to handle file fuploads 

    const uploadFiles = async () => {
        // get the files from the fileList as an array 
        let files = data.fileList;
        //initialize formData object 

        const formData = new FormData();
        //loop over files and add to formData
        files.forEach((file) => formData.append('files', file));

        //upload the files as a post request to the server using fetch
        // Note : /api/fileupload is not a real endpoint, it is just an example

        const response = await fetch("/fileupload", {
            method: "POST",
            body: formData,
        })

        // successful file upload 
        if (response.ok) {
            alert('Files uploaded successfully')
        }
        else {
            alert('Error uploading files, please try again later !! ')
            console.log(response)
        }
    }

    return (
        <div>
            <div
                className='bg-secondary-main p-3 h-[10rem] rounded-lg my-2 items-center flex justify-center'
                onDragEnter={(e) => handleDragEnter(e)}
                onDragOver={(e) => handleDragOver(e)}
                onDragLeave={(e) => handleDragLeave(e)}
                onDrop={(e) => handleDrop(e)}
            >
                <div>

                    <h2 className='text-[24px] font-light'>⤴️upload file</h2>


                    <h3>or drag & drop your files here</h3>
                </div>

            </div>
            {/* passing the selected file as props */}
            <h4>Simply upload the report generated by devProfiler.</h4>
            <ShowFile fileData={data} />

            <div className='flex justify-between sm:w-[40%] mt-5'>

            <label htmlFor="selectFile" className='bg-primary-main text-primary-light p-2 rounded-lg cursor-pointer'>
                Choose File
                <input type="file" id='selectFile'
                    onChange={(e) => handleFileSelect(e)}
                    className='hidden'
                    />
            </label>
            <button onClick={() => uploadFiles()} className='bg-primary-dark text-primary-light p-2 rounded-lg'>Upload file</button>
            </div>
        </div>
    )
}

export default DropZone